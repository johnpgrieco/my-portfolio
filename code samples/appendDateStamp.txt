function appendDateStamp() {
  
  // Append the last modified date of a file, to every file in a drive. 
  // When files are migrated from one drive to another they automatically 
  // update to the current date. This preserves the prior last modified 
  // date by uncluding it in the file name. 

  // Toggle the first two lines based on whether you are running in test or production.
  // TEST: var files = DriveApp.getFilesByName('THE TEST FILES TO MANIPULATE');
  // PRODUCTION, RENAME ALL THE FILES IN THE DRIVE: var files = DriveApp.getFiles();
  
  // It is currently set up for TEST. It will only rename files entitled "Untitled Spreadsheet To Test.xlsx".

  // Steps to deploy this: 
  // 1. BACK UP: back up the entire production drive. This changes the datestamp in the
  //    event of a need for rollback and reload, but protects from data loss.
  // 2. UNIT TEST: run this script on a local drive.
  // 3. QA TEST: run this script on a test folder/files in production.
  // 4. PREPARE: uncomment the statement var files = DriveApp.getFiles() below
  // 5. PREPARE: comment out the statement var files = DriveApp.getFilesByName below
  // 6. PREPARE: consider commenting out the audit trail logging to conserve space.  
  // 7. DEPLOY: Save this script to production. Refer to https://developers.google.com/apps-script/guides/projects
  // 8. RUN: Run it on the entire production drive. 
  // 9. VALIDATE: Ensure the results are as expected. If not, rollback go the file created in step 1. 

  var files = DriveApp.getFilesByName('Untitled Spreadsheet To Test.xlsx');
  //var files = DriveApp.getFiles(); 
  var fileCount = 0; 
  while (files.hasNext()) { 
    var file = files.next(); 
    oldFileName = file.getName();
    
    Logger.log('The old file name is: ' + oldFileName);
    
    var fileYear = file.getLastUpdated().getFullYear(); 
    var fileMonth = file.getLastUpdated().getMonth() + 1;   //getMonth() returns 0 for January, 1 for February, etc. so add 1. 
    var fileDayOfMonth = file.getLastUpdated().getDate(); 
    
    //Format it nicely
    if (fileMonth < 10) { 
      fileMonth = '0' + fileMonth; 
    }
    if (fileDayOfMonth < 10) { 
      fileDayOfMonth = '0' + fileDayOfMonth; 
    } 
    
    var newFileName = oldFileName + fileYear + fileMonth + fileDayOfMonth;
    file.setName(newFileName);
    
    Logger.log('The new file name is: ' + newFileName); 
    fileCount++;
  } 
  
  Logger.log('The count of files renamed is: ' + fileCount);
}